// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UdelasCore.Negocio.Data;

#nullable disable

namespace UdelasCore.Negocio.Migrations.HorariosDocencia
{
    [DbContext(typeof(HorariosDocenciaContext))]
    partial class HorariosDocenciaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AI")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ActivacionHorarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Activado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<int>("Anio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2000);

                    b.Property<int>("Extension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Periodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.HasKey("Id");

                    b.ToTable("ActivacionHorarios");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.AcuerdoMateria", b =>
                {
                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("Cod_carrera");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasDefaultValue("N");

                    b.Property<string>("Nomenclatura")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("N")
                        .HasComment("identificacion del acuerdo");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValue("N");

                    b.Property<string>("PlanCarrera")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("A")
                        .HasColumnName("plan_carrera");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("N")
                        .HasComment("Hay veces que ademas de la nomenclatura o identif de plan, se adjunta un titulo que lo describe");

                    b.ToTable("Acuerdo_materia");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.AcuerdosCarreras", b =>
                {
                    b.Property<int>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Plan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlan"));

                    b.Property<string>("Acuerdo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValue("N");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("Cod_carrera");

                    b.Property<string>("NomPlan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValue("N")
                        .HasColumnName("Nom_Plan");

                    b.HasKey("IdPlan");

                    b.ToTable("Acuerdos_carreras");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.AuditoriaUsuarioHorario", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Modern_Spanish_CI_AS");

                    b.Property<int>("Escuela")
                        .HasColumnType("int")
                        .HasColumnName("escuela");

                    b.Property<int>("Extension")
                        .HasColumnType("int")
                        .HasColumnName("extension");

                    b.Property<int>("Facultad")
                        .HasColumnType("int")
                        .HasColumnName("facultad");

                    b.Property<Guid?>("Guidusuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guidusuario");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLockedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NivelAcceso")
                        .HasColumnType("int")
                        .HasColumnName("nivel_acceso");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<string>("RoleName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Modern_Spanish_CI_AS");

                    b.ToTable((string)null);

                    b.ToView("AuditoriaUsuarioHorario", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.BdProfesor", b =>
                {
                    b.Property<int>("Annoingreso")
                        .HasColumnType("int")
                        .HasColumnName("annoingreso");

                    b.Property<string>("AnoPeriodoEntregarListas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ano_periodo_entregar_listas");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Celular")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("CodConferencias")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cod_conferencias");

                    b.Property<int?>("CodDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("cod_departamento");

                    b.Property<int?>("CodDoctorado")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Doctorado");

                    b.Property<string>("CodEjecutoria")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cod_ejecutoria");

                    b.Property<long>("CodEspecialidad")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_especialidad");

                    b.Property<string>("CodEstudio")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cod_estudio");

                    b.Property<int?>("CodLicenciatura")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Licenciatura");

                    b.Property<int?>("CodMaestria")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Maestria");

                    b.Property<string>("CodPerfeccionamiento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cod_perfeccionamiento");

                    b.Property<string>("CodPonencias")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cod_ponencias");

                    b.Property<int?>("CodPostgrado")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Postgrado");

                    b.Property<long>("CodProf")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_prof");

                    b.Property<int?>("CodProfesorado")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Profesorado");

                    b.Property<string>("CodPublicaciones")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cod_publicaciones");

                    b.Property<int?>("CodTecnico")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Tecnico");

                    b.Property<string>("Direccion")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("FechaTrabajo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("fecha_trabajo");

                    b.Property<string>("Habilitado")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("habilitado");

                    b.Property<string>("Idioma1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("idioma1");

                    b.Property<string>("Idioma2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("idioma2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Puntaje")
                        .HasColumnType("int");

                    b.Property<string>("Seguro")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Turnom")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Turnon")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Turnov")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.ToTable("Bd_profesor");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.BitacoraPr", b =>
                {
                    b.Property<int>("IdTbl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_tbl");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTbl"));

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Carrera");

                    b.Property<int?>("CodMateriaPr")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Materia_PR");

                    b.Property<int?>("Estatus")
                        .HasColumnType("int")
                        .HasComment("1. borró PR, 2. agregró PR");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdMateria")
                        .HasColumnType("int")
                        .HasColumnName("ID_Materia");

                    b.Property<string>("Motivo")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Operador")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTbl");

                    b.ToTable("Bitacora_PR");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CambiosHorariosLog", b =>
                {
                    b.Property<int>("CambioHorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CambioHorarioId"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("CedulaActual")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("CedulaAnterior")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CambioHorarioId");

                    b.ToTable("Cambios_Horarios_Log");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Carreras", b =>
                {
                    b.Property<int>("CodCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_carrera");

                    b.Property<string>("AbrevCarrera")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("abrev_carrera");

                    b.Property<int>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Acuerdo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValue("N");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValue("n")
                        .HasColumnName("carrera");

                    b.Property<int>("CodEscuela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_escuela");

                    b.Property<int?>("CodEscuela2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("cod_escuela2");

                    b.Property<int>("CodExtension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_facultad");

                    b.Property<int?>("CodFacultad2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("cod_facultad2");

                    b.Property<int?>("CodTecnico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("cod_tecnico");

                    b.Property<int>("Estatus")
                        .HasColumnType("int")
                        .HasComment("0: no promocionada 1: promocionada");

                    b.Property<int?>("GradoId")
                        .HasColumnType("int");

                    b.Property<int?>("Nivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Observacion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasDefaultValue("N");

                    b.Property<string>("PlanCarrera")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("A")
                        .HasColumnName("plan_carrera");

                    b.Property<int?>("Subgrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<int>("TipoPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(6)
                        .HasColumnName("Tipo_periodo");

                    b.HasKey("CodCarrera");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CarrerasTecnicos", b =>
                {
                    b.Property<int>("CodTecnico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Tecnico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTecnico"));

                    b.Property<string>("AbrevTecnico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Abrev_Tecnico");

                    b.Property<int?>("Activo")
                        .HasColumnType("int");

                    b.Property<string>("Acuerdo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Carrera");

                    b.Property<int?>("GradoId")
                        .HasColumnType("int");

                    b.Property<int?>("Subgrado")
                        .HasColumnType("int");

                    b.Property<string>("Tecnico")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("CodTecnico");

                    b.ToTable("CarrerasTecnicos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CategoriaProfesores", b =>
                {
                    b.Property<int>("CodCategoriaProfesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Categoria_Profesor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCategoriaProfesor"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasDefaultValue("BD")
                        .IsFixedLength();

                    b.Property<int>("IdTipoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("Id_Tipo_Pago");

                    b.Property<string>("NombreCategoriaProfesor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre_Categoria_Profesor");

                    b.HasKey("CodCategoriaProfesor")
                        .HasName("PK_Categoria_Profesor");

                    b.ToTable("Categoria_Profesores");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ClimLibMCursosTemp1", b =>
                {
                    b.Property<int>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("asignatura");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bloqueado");

                    b.Property<string>("Cerrado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cerrado");

                    b.Property<int>("CodAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("cod_asignatura");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodExtensionRegional")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension_regional");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_matricula");

                    b.Property<string>("CodProfesor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_profesor");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("id_asignatura");

                    b.Property<int>("MCursosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("M_cursosID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MCursosId"));

                    b.Property<int>("Minimo")
                        .HasColumnType("int")
                        .HasColumnName("minimo");

                    b.Property<int>("TipoPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_matricula");

                    b.Property<int>("Tope")
                        .HasColumnType("int")
                        .HasColumnName("tope");

                    b.Property<string>("VerEnInforme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ver_en_informe");

                    b.ToTable("Clim_Lib_M_cursos_temp-1");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ClimLibMCursosTemp2", b =>
                {
                    b.Property<int>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("asignatura");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bloqueado");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Cerrado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cerrado");

                    b.Property<int>("CodAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("cod_asignatura");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtensionRegional")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension_regional");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_matricula");

                    b.Property<string>("CodProfesor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_profesor");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<DateTime?>("Fechaasigdoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaasigdoc")
                        .HasDefaultValueSql("(((2000)-(1))-(1))");

                    b.Property<DateTime?>("Fechaasigpos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaasigpos")
                        .HasDefaultValueSql("(((2000)-(1))-(1))");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<Guid?>("Guidusuarioasigdoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guidusuarioasigdoc")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<Guid?>("Guidusuarioasigpos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guidusuarioasigpos")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("id_asignatura");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<int>("MCursosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("M_cursosID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MCursosId"));

                    b.Property<int>("Minimo")
                        .HasColumnType("int")
                        .HasColumnName("minimo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int>("TipoPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_matricula");

                    b.Property<int>("Tope")
                        .HasColumnType("int")
                        .HasColumnName("tope");

                    b.Property<string>("VerEnInforme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ver_en_informe");

                    b.ToTable("Clim_Lib_M_cursos_temp-2");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ClimLibMGruposTemp1", b =>
                {
                    b.Property<int>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bloqueado");

                    b.Property<string>("Cerrado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cerrado");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodExtensionRegional")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension_regional");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodPeriodoCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_carrera");

                    b.Property<int>("CodPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_matricula");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<int>("MGruposId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("M_gruposID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MGruposId"));

                    b.Property<int>("MesMatricula")
                        .HasColumnType("int")
                        .HasColumnName("mes_matricula");

                    b.Property<string>("Primeringreso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("primeringreso");

                    b.Property<int>("TipoPeriodoCarrera")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_carrera");

                    b.Property<int>("TipoPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_matricula");

                    b.Property<string>("VerEnInforme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ver_en_informe");

                    b.ToTable("Clim_Lib_M_grupos_temp-1");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ClimLibMGruposTemp2", b =>
                {
                    b.Property<int>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bloqueado");

                    b.Property<string>("Cerrado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cerrado");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtensionRegional")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension_regional");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodPeriodoCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_carrera");

                    b.Property<int>("CodPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_matricula");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<int>("MGruposId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("M_gruposID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MGruposId"));

                    b.Property<int>("MesMatricula")
                        .HasColumnType("int")
                        .HasColumnName("mes_matricula");

                    b.Property<string>("Primeringreso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("primeringreso");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.Property<int>("TipoPeriodoCarrera")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_carrera");

                    b.Property<int>("TipoPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_matricula");

                    b.Property<string>("VerEnInforme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ver_en_informe");

                    b.ToTable("Clim_Lib_M_grupos_temp-2");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CodigosCursos", b =>
                {
                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Extension");

                    b.Property<int>("CodigoCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("Codigo_Curso");

                    b.Property<int>("GradoId")
                        .HasColumnType("int");

                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<int>("TipoPeriodo")
                        .HasColumnType("int");

                    b.ToTable("CodigosCursos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CondicionSalones", b =>
                {
                    b.Property<int>("CodCondicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_condicion");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.ToTable("Condicion_salones");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Constantes", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ninguno")
                        .HasComment("");

                    b.Property<string>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ninguno");

                    b.Property<string>("Valor2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ninguno");

                    b.Property<int?>("Valor3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal?>("Valor4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValue(0.0m);

                    b.ToTable("Constantes");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Constantes2", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ninguno")
                        .HasComment("");

                    b.Property<string>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ninguno");

                    b.Property<string>("Valor2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("Ninguno");

                    b.Property<int?>("Valor3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal?>("Valor4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValue(0.0m);

                    b.ToTable("Constantes2");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Constantes3", b =>
                {
                    b.Property<string>("Actual")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("N")
                        .HasColumnName("actual");

                    b.Property<string>("ActualLibreta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("actualLibreta");

                    b.Property<string>("ActualperiodoEvaluacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("actualperiodoEvaluacion");

                    b.Property<int?>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Cerrado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cerrado");

                    b.Property<string>("CerradoEvaluacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cerradoEvaluacion");

                    b.Property<string>("FechaFinalPost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fecha_final_Post");

                    b.Property<string>("FechaFinalSem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fecha_final_Sem");

                    b.Property<string>("FechaInicialPost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fecha_inicial_Post");

                    b.Property<string>("FechaInicialSem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fecha_inicial_Sem");

                    b.Property<int>("IdTabla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tabla");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTabla"));

                    b.Property<int?>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.Property<int?>("PeriodoPost")
                        .HasColumnType("int")
                        .HasColumnName("periodo_post");

                    b.Property<string>("Version")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("version")
                        .IsFixedLength();

                    b.ToTable("Constantes3");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Csvdocentes", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Email")
                        .HasMaxLength(169)
                        .IsUnicode(false)
                        .HasColumnType("varchar(169)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<string>("Sede")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)");

                    b.ToTable((string)null);

                    b.ToView("CSVDocentes", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CursoOficialCruceMatriculadaPanama", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("curso_oficial_cruce_matriculada_panama", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Cursos", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<int>("AnioVigente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2000)
                        .HasColumnName("anio_vigente");

                    b.Property<int>("Ano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2007)
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValue("NOMBRAR")
                        .HasColumnName("apellido");

                    b.Property<int>("CantidadEstudiantes")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_estudiantes");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasDefaultValue("n")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("Cod1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod1")
                        .HasComment("La cantidad de semanas que realmente se va impartir este curso,si es -1, entonces se usan las semanas del periodo y se obvia la cantidad de este campo.");

                    b.Property<string>("Cod2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("CodCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodDeparatmento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("cod_deparatmento");

                    b.Property<int?>("CodEscuela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(8)
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("cod_facultad");

                    b.Property<int>("CodFinanciero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10000)
                        .HasColumnName("cod_financiero");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("N")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_materia");

                    b.Property<int>("CodProfesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_profesor");

                    b.Property<int>("CodTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_turno");

                    b.Property<int>("Creditos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3)
                        .HasColumnName("creditos");

                    b.Property<string>("DirEspecial")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("DD")
                        .HasColumnName("dir_especial");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValue("n")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("estatus2");

                    b.Property<DateTime?>("Fechaasigdoc")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaasigdoc");

                    b.Property<DateTime?>("Fechaasigpos")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaasigpos");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("A")
                        .HasColumnName("grupo");

                    b.Property<Guid?>("Guidusuarioasigdoc")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guidusuarioasigdoc");

                    b.Property<Guid?>("Guidusuarioasigpos")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guidusuarioasigpos");

                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("id_grupo");

                    b.Property<int?>("IdPosicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("ID_Posicion");

                    b.Property<string>("MateriaAbreviada")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("n")
                        .HasColumnName("materia_abreviada");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("n")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValue("POR")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("periodo");

                    b.Property<int>("PeriodoMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10)
                        .HasColumnName("periodo_materia");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("salon");

                    b.HasKey("IdCurso");

                    b.HasIndex(new[] { "Ano", "Periodo", "CedProfesor" }, "ID_CURSONOC3");

                    b.HasIndex(new[] { "Ano", "CodCarrera" }, "ID_CURSOSNONC");

                    b.HasIndex(new[] { "CodCurso", "Ano", "Periodo", "CedProfesor" }, "ID_CursosNOC");

                    b.ToTable("Cursos", t =>
                        {
                            t.HasTrigger("tg_Update_Horarios");

                            t.HasTrigger("trg_ActulizaDocenteCred");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CursosCopia", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<int>("CantidadEstudiantes")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_estudiantes");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodDeparatmento")
                        .HasColumnType("int")
                        .HasColumnName("cod_deparatmento");

                    b.Property<int?>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<int>("CodFinanciero")
                        .HasColumnType("int")
                        .HasColumnName("cod_financiero");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("CodProfesor")
                        .HasColumnType("int")
                        .HasColumnName("cod_profesor");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("DirEspecial")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("dir_especial");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus2");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("grupo");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("MateriaAbreviada")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("materia_abreviada");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.Property<int>("PeriodoMateria")
                        .HasColumnType("int")
                        .HasColumnName("periodo_materia");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.HasKey("IdCurso");

                    b.ToTable("Cursos_copia");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CursosCopia2", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<int>("CantidadEstudiantes")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_estudiantes");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodDeparatmento")
                        .HasColumnType("int")
                        .HasColumnName("cod_deparatmento");

                    b.Property<int?>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<int>("CodFinanciero")
                        .HasColumnType("int")
                        .HasColumnName("cod_financiero");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("CodProfesor")
                        .HasColumnType("int")
                        .HasColumnName("cod_profesor");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("DirEspecial")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("dir_especial");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus2");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("grupo");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("MateriaAbreviada")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("materia_abreviada");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.Property<int>("PeriodoMateria")
                        .HasColumnType("int")
                        .HasColumnName("periodo_materia");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.HasKey("IdCurso");

                    b.ToTable("Cursos_copia2");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CursosOficialesXPeriodos", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("Cursos_oficiales_X_Periodos", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.CursosXGrupo", b =>
                {
                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int?>("NumCursos")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("Cursos_X_Grupo", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Departamentos", b =>
                {
                    b.Property<int>("CodDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_departamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodDepartamento"));

                    b.Property<int?>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("Descripcion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValue("N")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("N")
                        .HasColumnName("nombre");

                    b.HasKey("CodDepartamento");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.DescripcionPeriodos", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Codigo");

                    b.ToTable("descripcion_periodos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Dias", b =>
                {
                    b.Property<string>("Dia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("n");

                    b.Property<int>("NumeroDia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("Numero_dia");

                    b.ToTable("Dias");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.DocenteConHor3Anios", b =>
                {
                    b.Property<int?>("Cant1")
                        .HasColumnType("int")
                        .HasColumnName("cant1");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.ToTable((string)null);

                    b.ToView("DocenteConHor3Anios", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.DocenteCsv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Clave")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("clave");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("extension");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Plataforma")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono");

                    b.Property<string>("Version")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.ToTable("Docente_CSV");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Docentes2016", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("Docentes2016", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Docentes2017", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("Docentes2017", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Docentes2018", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("Docentes2018", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.DocentesNuevos20182", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Facultad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("facultad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("DocentesNuevos-2018-2", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.DocentesXCuentas", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Email")
                        .HasMaxLength(169)
                        .IsUnicode(false)
                        .HasColumnType("varchar(169)");

                    b.Property<string>("Expr1")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Expr2")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Expr3")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreExtension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_extension");

                    b.Property<string>("Telefono")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)");

                    b.ToTable((string)null);

                    b.ToView("Docentes_X_cuentas", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Edificios", b =>
                {
                    b.Property<int>("CodEntidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_entidad");

                    b.Property<int>("CodExtension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_extension");

                    b.Property<string>("CodigoEdificio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValue("n")
                        .HasColumnName("codigo_edificio");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("ubicacion");

                    b.ToTable("Edificios");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Emailcorregir", b =>
                {
                    b.Property<string>("CedProfesor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("Expr1")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("emailcorregir", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Entidades", b =>
                {
                    b.Property<int>("CodEntidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_entidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("observacion");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("ubicacion");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Escuelas", b =>
                {
                    b.Property<int>("IdEscuela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_escuela");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEscuela"));

                    b.Property<int>("CodEscuela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_facultad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.HasKey("IdEscuela");

                    b.ToTable("Escuelas");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Extensiones", b =>
                {
                    b.Property<int>("CodExtension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_extension");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("distrito");

                    b.Property<string>("NombreExtension")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre_extension");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("provincia");

                    b.HasIndex(new[] { "CodExtension" }, "ID_cod_extension");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "CodExtension" }, "ID_cod_extension"));

                    b.ToTable("Extensiones");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Facultades", b =>
                {
                    b.Property<int>("CodExtension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_facultad");

                    b.Property<int>("CodNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("cod_Nivel");

                    b.Property<string>("Facultad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("facultad");

                    b.HasIndex(new[] { "CodFacultad" }, "ID_cod_facultad");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "CodFacultad" }, "ID_cod_facultad"));

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.GrupoCursoLibreta", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("Grupo_curso_libreta", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Grupos", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<int?>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<int?>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int?>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodEsp")
                        .HasColumnType("int")
                        .HasColumnName("cod_esp")
                        .HasComment("0: No; 1: Si *****\"código utilizado para las grupos de carreras fuera de periodo\"*****");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int?>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int?>("CodHorPlantilla")
                        .HasColumnType("int")
                        .HasColumnName("cod_hor_plantilla");

                    b.Property<string>("Edificio")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("estatus2");

                    b.Property<string>("FechaMatricula")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fecha_matricula");

                    b.Property<string>("LetraGrupo")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("letra_grupo");

                    b.Property<string>("Observacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("observacion");

                    b.Property<int?>("PeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("periodo_matricula");

                    b.Property<string>("Salon")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.Property<int?>("SemestreGrupo")
                        .HasColumnType("int")
                        .HasColumnName("semestre_grupo");

                    b.Property<int?>("Turno")
                        .HasColumnType("int")
                        .HasColumnName("turno");

                    b.Property<int?>("Turno2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("turno2");

                    b.HasKey("IdGrupo");

                    b.HasIndex(new[] { "AnoMatricula", "PeriodoMatricula", "CodExtension", "CodCarrera" }, "ID_GrupoNONC1");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.GruposChoques", b =>
                {
                    b.Property<string>("AbrevMateria")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("abrev_materia");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<int>("NumeroDia")
                        .HasColumnType("int")
                        .HasColumnName("numero_dia");

                    b.Property<int>("NumeroHora")
                        .HasColumnType("int")
                        .HasColumnName("numero_hora");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("salon");

                    b.ToTable((string)null);

                    b.ToView("Grupos_choques", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.GruposCopia", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<int?>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<int?>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int?>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int?>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int?>("CodHorPlantilla")
                        .HasColumnType("int")
                        .HasColumnName("cod_hor_plantilla");

                    b.Property<string>("Edificio")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus2");

                    b.Property<string>("FechaMatricula")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fecha_matricula");

                    b.Property<string>("LetraGrupo")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("letra_grupo");

                    b.Property<string>("Observacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("observacion");

                    b.Property<int?>("PeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("periodo_matricula");

                    b.Property<string>("Salon")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.Property<int?>("SemestreGrupo")
                        .HasColumnType("int")
                        .HasColumnName("semestre_grupo");

                    b.Property<int?>("Turno")
                        .HasColumnType("int")
                        .HasColumnName("turno");

                    b.HasKey("IdGrupo");

                    b.ToTable("Grupos_copia");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.GruposEspeciales", b =>
                {
                    b.Property<int>("Idr")
                        .HasColumnType("int");

                    b.Property<int?>("AnioActual")
                        .HasColumnType("int")
                        .HasColumnName("Anio_actual");

                    b.Property<int?>("AnioAnterior")
                        .HasColumnType("int")
                        .HasColumnName("Anio_anterior");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int?>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("GrupoActual")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Grupo_actual");

                    b.Property<string>("GrupoAnterior")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Grupo_anterior");

                    b.Property<int?>("IdGrupoReferencia")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo_referencia");

                    b.Property<int?>("PeriodoActual")
                        .HasColumnType("int")
                        .HasColumnName("Periodo_actual");

                    b.Property<int?>("PeriodoAnterior")
                        .HasColumnType("int")
                        .HasColumnName("Periodo_anterior");

                    b.HasKey("Idr")
                        .HasName("PK_Grupo_especial");

                    b.ToTable("Grupos_especiales");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.HistoricoCursos", b =>
                {
                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<int>("CantidadEstudiantes")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_estudiantes");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodDeparatmento")
                        .HasColumnType("int")
                        .HasColumnName("cod_deparatmento");

                    b.Property<int?>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<int>("CodFinanciero")
                        .HasColumnType("int")
                        .HasColumnName("cod_financiero");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("CodProfesor")
                        .HasColumnType("int")
                        .HasColumnName("cod_profesor");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("DirEspecial")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("dir_especial");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus2");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("grupo");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("MateriaAbreviada")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("materia_abreviada");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.Property<int>("PeriodoMateria")
                        .HasColumnType("int")
                        .HasColumnName("periodo_materia");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.HasKey("IdCurso");

                    b.ToTable("HistoricoCursos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.HistoricoGrupos", b =>
                {
                    b.Property<int?>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<int?>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int?>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int?>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int?>("CodHorPlantilla")
                        .HasColumnType("int")
                        .HasColumnName("cod_hor_plantilla");

                    b.Property<string>("Edificio")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus2");

                    b.Property<string>("FechaMatricula")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fecha_matricula");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("LetraGrupo")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("letra_grupo");

                    b.Property<string>("Observacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("observacion");

                    b.Property<int?>("PeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("periodo_matricula");

                    b.Property<string>("Salon")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.Property<int?>("SemestreGrupo")
                        .HasColumnType("int")
                        .HasColumnName("semestre_grupo");

                    b.Property<int?>("Turno")
                        .HasColumnType("int")
                        .HasColumnName("turno");

                    b.ToTable("HistoricoGrupos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Hoja1", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("apellido");

                    b.Property<string>("Conexión")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("conexión");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("status");

                    b.ToTable("Hoja1$");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.HorarioTipoPago", b =>
                {
                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int?>("T")
                        .HasColumnType("int")
                        .HasColumnName("t");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo_pago");

                    b.ToTable((string)null);

                    b.ToView("horario_tipo_pago", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Horarios", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("AbrevMateria")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("n")
                        .HasColumnName("abrev_materia");

                    b.Property<string>("AmPmF")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("n")
                        .HasColumnName("am_pm_f");

                    b.Property<string>("AmPmI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("n")
                        .HasColumnName("am_pm_i");

                    b.Property<int?>("Ano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(9999)
                        .HasColumnName("ano");

                    b.Property<int>("Cod1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod1")
                        .HasComment("En cantidad de semanas que debe darse, si es -1 se ajusta a lo señalado por periodo y se obvia la cantidad de este campo.");

                    b.Property<string>("Cod2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValue("n")
                        .HasColumnName("cod2");

                    b.Property<int>("CodCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodHorarioPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_horario_plantilla");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValue("n")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("estatus2");

                    b.Property<DateTime?>("Fechamodificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechamodificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("Guidusuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guidusuario");

                    b.Property<int>("HFinal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("h_final");

                    b.Property<int>("HInicial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("h_inicial");

                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("id_curso");

                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("id_grupo");

                    b.Property<int>("IntermedioMinutos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("intermedio_minutos");

                    b.Property<int>("MFinal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("m_final");

                    b.Property<int>("MInicial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("m_inicial");

                    b.Property<string>("NombreDia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre_dia");

                    b.Property<string>("NombreTipoClase")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre_tipo_clase");

                    b.Property<int>("NumeroDia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("numero_dia");

                    b.Property<int>("NumeroHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("numero_hora");

                    b.Property<int?>("Periodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3)
                        .HasColumnName("periodo");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("salon");

                    b.Property<int>("TipoHoraClase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("tipo_hora_clase");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("tipo_pago");

                    b.HasKey("IdHorario");

                    b.HasIndex(new[] { "IdCurso" }, "ID_IDCURSOHorario");

                    b.ToTable("Horarios", t =>
                        {
                            t.HasTrigger("insert_ano_periodo");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.HorariosCopia", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("AbrevMateria")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("abrev_materia");

                    b.Property<string>("AmPmF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_f");

                    b.Property<string>("AmPmI")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_i");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<int>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodHorarioPlantilla")
                        .HasColumnType("int")
                        .HasColumnName("cod_horario_plantilla");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus2");

                    b.Property<int>("HFinal")
                        .HasColumnType("int")
                        .HasColumnName("h_final");

                    b.Property<int>("HInicial")
                        .HasColumnType("int")
                        .HasColumnName("h_inicial");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<int>("IntermedioMinutos")
                        .HasColumnType("int")
                        .HasColumnName("intermedio_minutos");

                    b.Property<int>("MFinal")
                        .HasColumnType("int")
                        .HasColumnName("m_final");

                    b.Property<int>("MInicial")
                        .HasColumnType("int")
                        .HasColumnName("m_inicial");

                    b.Property<string>("NombreDia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("nombre_dia");

                    b.Property<string>("NombreTipoClase")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre_tipo_clase");

                    b.Property<int>("NumeroDia")
                        .HasColumnType("int")
                        .HasColumnName("numero_dia");

                    b.Property<int>("NumeroHora")
                        .HasColumnType("int")
                        .HasColumnName("numero_hora");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.Property<int>("TipoHoraClase")
                        .HasColumnType("int")
                        .HasColumnName("tipo_hora_clase");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo_pago");

                    b.HasKey("IdHorario")
                        .HasName("PK_Horarios_copia2");

                    b.ToTable("Horarios_copia");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.HorariosCopia1", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("AbrevMateria")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("abrev_materia");

                    b.Property<string>("AmPmF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_f");

                    b.Property<string>("AmPmI")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_i");

                    b.Property<int>("Cod1")
                        .HasColumnType("int")
                        .HasColumnName("cod1");

                    b.Property<string>("Cod2")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("cod2");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodHorarioPlantilla")
                        .HasColumnType("int")
                        .HasColumnName("cod_horario_plantilla");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Estatus1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus1");

                    b.Property<string>("Estatus2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estatus2");

                    b.Property<int>("HFinal")
                        .HasColumnType("int")
                        .HasColumnName("h_final");

                    b.Property<int>("HInicial")
                        .HasColumnType("int")
                        .HasColumnName("h_inicial");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<int>("IntermedioMinutos")
                        .HasColumnType("int")
                        .HasColumnName("intermedio_minutos");

                    b.Property<int>("MFinal")
                        .HasColumnType("int")
                        .HasColumnName("m_final");

                    b.Property<int>("MInicial")
                        .HasColumnType("int")
                        .HasColumnName("m_inicial");

                    b.Property<string>("NombreDia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("nombre_dia");

                    b.Property<string>("NombreTipoClase")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre_tipo_clase");

                    b.Property<int>("NumeroDia")
                        .HasColumnType("int")
                        .HasColumnName("numero_dia");

                    b.Property<int>("NumeroHora")
                        .HasColumnType("int")
                        .HasColumnName("numero_hora");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.Property<int>("TipoHoraClase")
                        .HasColumnType("int")
                        .HasColumnName("tipo_hora_clase");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo_pago");

                    b.HasKey("IdHorario")
                        .HasName("PK_Horarios_copia");

                    b.ToTable("Horarios_copia1");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.HorariosPlantilla", b =>
                {
                    b.Property<int>("CodPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_plantilla");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("observacion");

                    b.ToTable("Horarios_plantilla");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.HorariosPlantillaDetalles", b =>
                {
                    b.Property<int>("CodPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_plantilla");

                    b.Property<int>("NumeroHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("numero_hora");

                    b.Property<string>("AmpmF")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("n")
                        .HasColumnName("ampm_f");

                    b.Property<string>("AmpmI")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("n")
                        .HasColumnName("ampm_i");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int>("HFinal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("h_final");

                    b.Property<int>("HInicial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("h_inicial");

                    b.Property<int>("MFinal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("m_final");

                    b.Property<int>("MInicial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("m_inicial");

                    b.Property<int>("MinutosIntermedio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("minutos_intermedio");

                    b.HasKey("CodPlantilla", "NumeroHora");

                    b.ToTable("Horarios_plantilla_detalles");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ListaCursoOficialesPma", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<string>("CodGrupo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("Lista_curso_oficiales_pma", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ListaCursosColegiadasPma", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("Lista_cursos_colegiadas_pma", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ListadoAnioMayorDocentes", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Facultad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("facultad");

                    b.Property<string>("NombreExtension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_extension");

                    b.ToTable((string)null);

                    b.ToView("Listado_anio_mayor_docentes", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsAmAm", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_am_am", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsAmAmCarga", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_am_am_Carga", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsAmPm", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_am_pm", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsAmPmCarga", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_am_pm_Carga", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsDocentesPorCarga", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_Docentes_PorCarga", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsDocentesPorPago", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_Docentes_PorPago", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsPmPmMayora4", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_pm_pm_mayora4", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsPmPmMayora4Carga", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_pm_pm_mayora4_Carga", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsPmPmMenora4", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_pm_pm_menora4", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.LsPmPmMenora4Carga", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("LS_pm_pm_menora4_Carga", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MCostosFijosGruposTemp", b =>
                {
                    b.Property<int>("MCostosFijosGruposId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("M_costos_fijos_gruposID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MCostosFijosGruposId"));

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodContenedor")
                        .HasColumnType("int")
                        .HasColumnName("cod_contenedor");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_matricula");

                    b.Property<int>("TipoPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_matricula");

                    b.HasKey("MCostosFijosGruposId");

                    b.ToTable("M_costos_fijos_grupos_TEMP");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MCursos", b =>
                {
                    b.Property<int>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("asignatura");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bloqueado");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Cerrado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cerrado");

                    b.Property<int>("CodAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("cod_asignatura");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtensionRegional")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension_regional");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_matricula");

                    b.Property<string>("CodProfesor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_profesor");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("id_asignatura");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<int>("MCursosId")
                        .HasColumnType("int")
                        .HasColumnName("M_cursosID");

                    b.Property<int>("Minimo")
                        .HasColumnType("int")
                        .HasColumnName("minimo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int>("TipoPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_matricula");

                    b.Property<int>("Tope")
                        .HasColumnType("int")
                        .HasColumnName("tope");

                    b.Property<string>("VerEnInforme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ver_en_informe");

                    b.ToTable("M_cursos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MGrupos", b =>
                {
                    b.Property<int>("AnoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("ano_matricula");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bloqueado");

                    b.Property<string>("Cerrado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cerrado");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodEscuela")
                        .HasColumnType("int")
                        .HasColumnName("cod_escuela");

                    b.Property<int>("CodExtensionRegional")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension_regional");

                    b.Property<int>("CodFacultad")
                        .HasColumnType("int")
                        .HasColumnName("cod_facultad");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodPeriodoCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_carrera");

                    b.Property<int>("CodPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("cod_periodo_matricula");

                    b.Property<int>("CodTurno")
                        .HasColumnType("int")
                        .HasColumnName("cod_turno");

                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<int>("MGruposId")
                        .HasColumnType("int")
                        .HasColumnName("M_gruposID");

                    b.Property<int>("MesMatricula")
                        .HasColumnType("int")
                        .HasColumnName("mes_matricula");

                    b.Property<string>("Primeringreso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("primeringreso");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("salon");

                    b.Property<int>("TipoPeriodoCarrera")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_carrera");

                    b.Property<int>("TipoPeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo_matricula");

                    b.Property<string>("VerEnInforme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ver_en_informe");

                    b.ToTable("M_grupos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MatPoCarreraFiltro", b =>
                {
                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.ToTable((string)null);

                    b.ToView("mat_po_carrera_filtro", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Matcar", b =>
                {
                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.ToTable((string)null);

                    b.ToView("Matcar", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MateriasParaVerificarTecnico", b =>
                {
                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("MATERIAS_PARA_VERIFICAR_TECNICO", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MateriasPorCarreras", b =>
                {
                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("abreviatura");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCarrera2")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera2");

                    b.Property<int>("CodDepartamento")
                        .HasColumnType("int")
                        .HasColumnName("cod_departamento");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estatus")
                        .HasComment("1 - materia activa / 0 - materia desactivada");

                    b.Property<int>("FlagPrerequisitos")
                        .HasColumnType("int")
                        .HasColumnName("Flag_prerequisitos");

                    b.Property<DateTime>("Horaregistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("horaregistro");

                    b.Property<int>("HorasLab")
                        .HasColumnType("int")
                        .HasColumnName("Horas_Lab");

                    b.Property<int>("HorasOtros")
                        .HasColumnType("int")
                        .HasColumnName("Horas_otros");

                    b.Property<int>("HorasPracticas")
                        .HasColumnType("int")
                        .HasColumnName("horas_practicas")
                        .HasComment("Estatus para las materias Prácticas Universitarias: 0 No tiene horas prácticas, 1 si tiene horas prácticas (Lic)");

                    b.Property<int>("HorasTeoria")
                        .HasColumnType("int")
                        .HasColumnName("Horas_teoria");

                    b.Property<int>("HorasTotal")
                        .HasColumnType("int")
                        .HasColumnName("Horas_total");

                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_materia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateria"));

                    b.Property<int?>("IdPlan")
                        .HasColumnType("int")
                        .HasColumnName("ID_Plan");

                    b.Property<string>("Observacion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Operador")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("sistema")
                        .HasColumnName("operador");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.Property<int>("Tecnico")
                        .HasColumnType("int")
                        .HasColumnName("tecnico");

                    b.Property<int>("TipoPeriodo")
                        .HasColumnType("int")
                        .HasColumnName("tipo_periodo");

                    b.HasIndex(new[] { "CodCarrera", "Estatus" }, "ID_MXCNOC1");

                    b.ToTable("Materias_por_carreras");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MateriasPracticas", b =>
                {
                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("Cod_carrera");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("Cod_materia");

                    b.Property<string>("CompetenciaNivelPractica")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)")
                        .HasDefaultValue("N")
                        .HasColumnName("Competencia_nivel_practica");

                    b.Property<int>("Idmateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmateria"));

                    b.ToTable("Materias_Practicas");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.MateriasPreRequisitos", b =>
                {
                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<int>("IdMateriaAsociada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("id_materia_asociada");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("N")
                        .HasColumnName("nombre_materia");

                    b.Property<string>("PlanCarrera")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("A")
                        .HasColumnName("plan_carrera");

                    b.HasKey("CodMateria", "IdMateriaAsociada");

                    b.ToTable("Materias_PreRequisitos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.NivelAcceso", b =>
                {
                    b.Property<int>("CodAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_acceso");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.ToTable("Nivel_acceso");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.NivelDiplomados", b =>
                {
                    b.Property<int>("IdNivelDip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNivelDip"));

                    b.Property<string>("DescripcionNivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdNivelDip");

                    b.ToTable("NivelDiplomados");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Notanoentregada", b =>
                {
                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.ToTable((string)null);

                    b.ToView("NOTANOENTREGADA", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.NotasCarreras", b =>
                {
                    b.Property<string>("Asunto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("N");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasDefaultValue("N");

                    b.Property<string>("FirmaDe")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("N")
                        .HasColumnName("Firma_de");

                    b.Property<string>("Nomenclatura")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("N");

                    b.Property<string>("PlanCarrera")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("A")
                        .HasColumnName("plan_carrera");

                    b.Property<string>("ResumenContenido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValue("N")
                        .HasColumnName("Resumen_contenido");

                    b.ToTable("Notas_carreras");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.NotasMateria", b =>
                {
                    b.Property<string>("Asunto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("N");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("N");

                    b.Property<string>("FirmaDe")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("N")
                        .HasColumnName("Firma_de");

                    b.Property<string>("Nomenclatura")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("N");

                    b.Property<string>("PlanCarrera")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasDefaultValue("A")
                        .HasColumnName("plan_carrera");

                    b.Property<string>("ResumenContenido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValue("N")
                        .HasColumnName("Resumen_contenido");

                    b.ToTable("Notas_materia");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Numeros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.ToTable("Numeros");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ObservacionesMateria", b =>
                {
                    b.Property<int>("IdMateria")
                        .HasColumnType("int")
                        .HasColumnName("id_materia");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("Ninguna")
                        .HasColumnName("observacion");

                    b.HasKey("IdMateria");

                    b.ToTable("Observaciones_materia");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.OpcionesDePagos", b =>
                {
                    b.Property<int>("OpcionDePagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpcionDePagoId"));

                    b.HasKey("OpcionDePagoId");

                    b.ToTable("OpcionesDePagos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Parte1Reportesubhumanos", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo_pago");

                    b.ToTable((string)null);

                    b.ToView("PARTE_1_reportesubhumanos", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Parte2Reportesubhumano", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo_pago");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.ToTable((string)null);

                    b.ToView("PARTE_2_reportesubhumano", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.PeriodoPorDiplomados", b =>
                {
                    b.Property<int>("IdPeriodoPorDiplomado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeriodoPorDiplomado"));

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int");

                    b.Property<int>("CodPeriodo")
                        .HasColumnType("int")
                        .HasColumnName("codPeriodo");

                    b.Property<string>("DescripcionDiplomado")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.HasKey("IdPeriodoPorDiplomado");

                    b.ToTable("PeriodoPorDiplomados");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Periodos", b =>
                {
                    b.Property<int>("PeriodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodoId"));

                    b.Property<int>("CodPeriodo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.HasKey("PeriodoId");

                    b.ToTable("Periodos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.PeriodosAcademicos", b =>
                {
                    b.Property<int>("CodTipoPeriodo")
                        .HasColumnType("int")
                        .HasColumnName("Cod_tipo_periodo");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Abreviado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("N");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("CodTipoPeriodo", "Numero");

                    b.ToTable("Periodos_academicos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.PeriodosVigentes", b =>
                {
                    b.Property<int>("AnoVigente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("Ano_vigente");

                    b.Property<int>("PeriodoCuatrimestre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("periodo_cuatrimestre");

                    b.Property<int>("PeriodoModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("periodo_modulo");

                    b.Property<int>("PeriodoSemestre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("periodo_semestre");

                    b.ToTable("Periodos_vigentes");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ProfesoresEvaluacionCursos", b =>
                {
                    b.Property<string>("ActualperiodoEvaluacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("actualperiodoEvaluacion");

                    b.Property<int?>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int>("Facultad")
                        .HasColumnType("int");

                    b.Property<int?>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("ProfesoresEvaluacionCursos", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Resultados", b =>
                {
                    b.Property<string>("Carrera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CARRERA");

                    b.Property<int?>("CodCarrer")
                        .HasColumnType("int")
                        .HasColumnName("COD_CARRER");

                    b.Property<int?>("CodEscuel")
                        .HasColumnType("int")
                        .HasColumnName("COD_ESCUEL");

                    b.Property<int?>("CodFacult")
                        .HasColumnType("int")
                        .HasColumnName("COD_FACULT");

                    b.Property<int?>("CodSede")
                        .HasColumnType("int")
                        .HasColumnName("COD_SEDE");

                    b.Property<string>("NombreCor")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("NOMBRE_COR");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Salones", b =>
                {
                    b.Property<string>("CodEdificio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValue("n")
                        .HasColumnName("cod_edificio");

                    b.Property<int>("CodExtension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("cod_extension");

                    b.Property<string>("CodSalon")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("cod_salon");

                    b.Property<int>("Condiciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("condiciones");

                    b.Property<int>("Gg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GG");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Gg"));

                    b.Property<string>("NombreSalon")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre_salon");

                    b.Property<int>("TipoSalon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("tipo_salon");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("ubicacion");

                    b.ToTable("Salones");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.SalonesChoque", b =>
                {
                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<int?>("Expr1")
                        .HasColumnType("int");

                    b.Property<int>("NumeroDia")
                        .HasColumnType("int")
                        .HasColumnName("numero_dia");

                    b.Property<int>("NumeroHora")
                        .HasColumnType("int")
                        .HasColumnName("numero_hora");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("salon");

                    b.ToTable((string)null);

                    b.ToView("Salones_choque", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.SalonesChoques", b =>
                {
                    b.Property<string>("Edificio")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("edificio");

                    b.Property<int?>("Expr1")
                        .HasColumnType("int");

                    b.Property<int>("NumeroDia")
                        .HasColumnType("int")
                        .HasColumnName("numero_dia");

                    b.Property<int>("NumeroHora")
                        .HasColumnType("int")
                        .HasColumnName("numero_hora");

                    b.Property<string>("Salon")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("salon");

                    b.ToTable("Salones_choques");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.SemMat", b =>
                {
                    b.Property<int>("IdSemMat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSemMat"));

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("Cod_carrera");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int");

                    b.Property<int?>("GradoId")
                        .HasColumnType("int");

                    b.Property<string>("NomSemMateria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nom_sem_materia");

                    b.Property<int>("Periodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("TipoPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(4);

                    b.HasKey("IdSemMat");

                    b.ToTable("Sem_mat");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Sesiones", b =>
                {
                    b.Property<string>("Fecha")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("n")
                        .HasColumnName("fecha");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("n")
                        .HasColumnName("hora");

                    b.Property<string>("IdSesion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("id_sesion");

                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("id_usuario");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("ip");

                    b.Property<string>("Macadress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("macadress");

                    b.Property<string>("Maquina")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("maquina");

                    b.Property<string>("TablasAfectadas")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("tablas_afectadas");

                    b.Property<string>("TipoDeOperaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("tipo_de_operaciones");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.SubTiposGrados", b =>
                {
                    b.Property<int>("SubTipoGradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubTipoGradoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoGrado")
                        .HasColumnType("int");

                    b.HasKey("SubTipoGradoId");

                    b.ToTable("SubTiposGrados");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.T3Horarios", b =>
                {
                    b.Property<int?>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int?>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.Property<string>("T")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("t");

                    b.ToTable((string)null);

                    b.ToView("T3_horarios", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TablaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodAsignatura1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod_asignatura1");

                    b.Property<string>("CodAsignatura2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod_asignatura2");

                    b.Property<string>("CodAsignatura3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod_asignatura3");

                    b.Property<string>("CodAsignatura4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod_asignatura4");

                    b.Property<string>("Course1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("course1");

                    b.Property<string>("Course2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("course2");

                    b.Property<string>("Course3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("course3");

                    b.Property<string>("Course4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("course4");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("TablaModel");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TempD1", b =>
                {
                    b.Property<string>("Apeprofe")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("apeprofe");

                    b.Property<string>("Cedprofe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cedprofe");

                    b.Property<int?>("Codext")
                        .HasColumnType("int")
                        .HasColumnName("codext");

                    b.Property<string>("Nomprofe")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nomprofe");

                    b.ToTable("TempD1");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TempD2", b =>
                {
                    b.Property<string>("Apeprofe")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("apeprofe");

                    b.Property<string>("Cedprofe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cedprofe");

                    b.Property<int?>("Codext")
                        .HasColumnType("int")
                        .HasColumnName("codext");

                    b.Property<string>("Nomprofe")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nomprofe");

                    b.ToTable("TempD2");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TempDoc3Anios", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("IdDoc")
                        .HasColumnType("int")
                        .HasColumnName("Id_Doc");

                    b.ToTable("Temp_Doc3Anios");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TempDocentesPendRevisar", b =>
                {
                    b.Property<string>("CedProfe")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("Ced_profe");

                    b.ToTable("TempDocentes_PendRevisar");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TempoDoceSs3a1", b =>
                {
                    b.Property<string>("Cedula1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("cedula1");

                    b.Property<int?>("CodSede1")
                        .HasColumnType("int")
                        .HasColumnName("Cod_sede1");

                    b.Property<int?>("Id1")
                        .HasColumnType("int");

                    b.Property<string>("Sede1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("TempoDoceSS3A1");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TemporalDoceSs3a", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("CodSede")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Sede")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("TemporalDoceSS3A");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TipoDocente", b =>
                {
                    b.Property<int>("CodTipoDocente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_tipo_docente");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("descripcion");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("observacion");

                    b.ToTable("Tipo_docente");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TipoHoraclase", b =>
                {
                    b.Property<int>("CodTipoHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_tipo_hora");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("n")
                        .HasColumnName("descripcion");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("observacion");

                    b.ToTable("Tipo_horaclase");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TipoPago", b =>
                {
                    b.Property<int>("CodTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_tipo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("descripcion");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("observacion");

                    b.ToTable("Tipo_pago");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TipoPagos", b =>
                {
                    b.Property<int>("IdTipoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Tipo_Pago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoPago"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasDefaultValue("n");

                    b.Property<decimal>("MontoHoras")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Monto_Horas");

                    b.Property<decimal>("MontoVacaciones")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Monto_Vacaciones");

                    b.Property<int>("Nivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("SubTipoGrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<int>("TipoEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("Tipo_Estudio");

                    b.HasKey("IdTipoPago");

                    b.ToTable("Tipo_Pagos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TipoPeriodos", b =>
                {
                    b.Property<int>("CodPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(6)
                        .HasColumnName("Cod_periodo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasDefaultValue("Semestre")
                        .HasColumnName("descripcion")
                        .IsFixedLength();

                    b.ToTable("Tipo_periodos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TiposGrados", b =>
                {
                    b.Property<int>("GradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradoId"));

                    b.Property<string>("NombreGrado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GradoId");

                    b.ToTable("TiposGrados");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.TokenDocentes", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Dni2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("N")
                        .HasColumnName("DNI2");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sede")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("TokenDocentes");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Turnos", b =>
                {
                    b.Property<string>("Abreviado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("n")
                        .HasColumnName("abreviado");

                    b.Property<int>("CodTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("cod_turno");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("n")
                        .HasColumnName("observacion");

                    b.HasIndex(new[] { "CodTurno" }, "ID_cod_turno");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "CodTurno" }, "ID_cod_turno"));

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.Usuarios", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("apellido");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("cargo");

                    b.Property<int>("Carreras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("carreras");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasDefaultValue("n")
                        .HasColumnName("cedula");

                    b.Property<int?>("Codunidad")
                        .HasColumnType("int")
                        .HasColumnName("codunidad");

                    b.Property<string>("CreadorCuenta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("creador_cuenta");

                    b.Property<int>("EntidadLabora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("entidad_labora");

                    b.Property<int>("Escuela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("escuela");

                    b.Property<int>("Extension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("extension");

                    b.Property<int>("Facultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("facultad");

                    b.Property<string>("FechaCreacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("n")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Funciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("funciones");

                    b.Property<Guid?>("Guidusuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guidusuario");

                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("ip");

                    b.Property<string>("Macadress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("macadress");

                    b.Property<string>("Maquina")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("maquina");

                    b.Property<int>("NivelAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1)
                        .HasColumnName("nivel_acceso")
                        .HasComment("0 no entra, 1 consulta, 5 operativo , 6 administrador");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValue("n")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("observacion");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("password");

                    b.Property<string>("UbicacionFisica")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("n")
                        .HasColumnName("ubicacion_fisica");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("n")
                        .HasColumnName("usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.VerificarGruposCantEstPma", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<int?>("CantidadEstudiantes")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_estudiantes");

                    b.Property<string>("Carrera")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("carrera");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_grupo");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("verificar_grupos_cant_est_pma", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.View1", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("Horas")
                        .HasColumnType("int")
                        .HasColumnName("HORAS");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<string>("R")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_1", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.View2", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<int?>("CantMaterias")
                        .HasColumnType("int")
                        .HasColumnName("Cant_materias");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_2", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.View3", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("carrera");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("Expr1")
                        .HasColumnType("int");

                    b.Property<string>("LetraGrupo")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("letra_grupo");

                    b.Property<string>("MateriaCompleta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("materia_completa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int?>("PeriodoMatricula")
                        .HasColumnType("int")
                        .HasColumnName("periodo_matricula");

                    b.Property<int?>("SemestreGrupo")
                        .HasColumnType("int")
                        .HasColumnName("semestre_grupo");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo_pago");

                    b.Property<int>("TipoPeriodo")
                        .HasColumnType("int")
                        .HasColumnName("Tipo_periodo");

                    b.Property<int?>("Turno")
                        .HasColumnType("int")
                        .HasColumnName("turno");

                    b.ToTable((string)null);

                    b.ToView("View_3", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.View4ls", b =>
                {
                    b.Property<string>("Cant")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("CANT");

                    b.Property<string>("Carrera")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("carrera");

                    b.Property<string>("CodGrupo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("Cod_grupo");

                    b.Property<string>("Facultad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("facultad");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_4LS", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewCantidadHorasCursos", b =>
                {
                    b.Property<int?>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<int?>("CantHoras")
                        .HasColumnType("int");

                    b.Property<int?>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.Property<int>("Expr1")
                        .HasColumnType("int");

                    b.Property<int?>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("View_CantidadHorasCursos", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewConPostgrado", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<string>("Postgrado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("View_ConPostgrado", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewCuentasCreadasXcortes", b =>
                {
                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("extension");

                    b.Property<int?>("T")
                        .HasColumnType("int")
                        .HasColumnName("t");

                    b.ToTable((string)null);

                    b.ToView("View_CuentasCreadasXcortes", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewCursosnogendpc2023", b =>
                {
                    b.Property<int>("CodCurso")
                        .HasColumnType("int")
                        .HasColumnName("cod_curso");

                    b.ToTable((string)null);

                    b.ToView("View_CURSOSNOGENDPC2023", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDoc3A", b =>
                {
                    b.Property<int?>("Cant1")
                        .HasColumnType("int")
                        .HasColumnName("cant1");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.ToTable((string)null);

                    b.ToView("View_Doc3A", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDoc3Aa", b =>
                {
                    b.Property<int?>("Cant1")
                        .HasColumnType("int")
                        .HasColumnName("cant1");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.ToTable((string)null);

                    b.ToView("View_Doc3AA", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDocent20222023", b =>
                {
                    b.Property<int?>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_Docent2022-2023", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDocent2024", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_Docent2024", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDocente2023", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_Docente-2023", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDocenteVotantesUlt3Anios", b =>
                {
                    b.Property<int?>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ano");

                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_Docente_Votantes-Ult3Anios", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDocentesPrelVoto24", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_DocentesPrelVoto24", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewDocentesXCuentas", b =>
                {
                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Email")
                        .HasMaxLength(169)
                        .IsUnicode(false)
                        .HasColumnType("varchar(169)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreExtension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_extension");

                    b.Property<string>("Telefono")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("version");

                    b.ToTable((string)null);

                    b.ToView("View_Docentes_X_Cuentas", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewHorariosCurso", b =>
                {
                    b.Property<string>("AmPmF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_f");

                    b.Property<string>("AmPmI")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_i");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int>("HFinal")
                        .HasColumnType("int")
                        .HasColumnName("h_final");

                    b.Property<int>("HInicial")
                        .HasColumnType("int")
                        .HasColumnName("h_inicial");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    b.Property<int>("MFinal")
                        .HasColumnType("int")
                        .HasColumnName("m_final");

                    b.Property<int>("MInicial")
                        .HasColumnType("int")
                        .HasColumnName("m_inicial");

                    b.Property<string>("NombreDia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("nombre_dia");

                    b.ToTable((string)null);

                    b.ToView("View_HorariosCurso", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewIltec1", b =>
                {
                    b.Property<string>("CedProfesor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("extension");

                    b.Property<string>("GruposCursos")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("View_Iltec1", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewIltec2", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("extension");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstname");

                    b.Property<string>("GruposCursos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.ToTable((string)null);

                    b.ToView("View_Iltec2", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewMateriasXcarreraSemestre", b =>
                {
                    b.Property<int>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int")
                        .HasColumnName("cod_materia");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("IdPlan")
                        .HasColumnType("int")
                        .HasColumnName("ID_Plan");

                    b.Property<string>("NomSemMateria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nom_sem_materia");

                    b.Property<int>("Periodo")
                        .HasColumnType("int")
                        .HasColumnName("periodo");

                    b.ToTable((string)null);

                    b.ToView("View_MateriasXCarreraSemestre", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewNumCar", b =>
                {
                    b.Property<int?>("CodCarrera")
                        .HasColumnType("int")
                        .HasColumnName("cod_carrera");

                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ViewNumCar", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewPorAutorizarConHorariosTurnos", b =>
                {
                    b.Property<string>("AmPmF")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_f");

                    b.Property<string>("AmPmI")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("am_pm_i");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<string>("Expr1")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int?>("HFinal")
                        .HasColumnType("int")
                        .HasColumnName("h_final");

                    b.Property<int?>("HInicial")
                        .HasColumnType("int")
                        .HasColumnName("h_inicial");

                    b.Property<int?>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    b.Property<int?>("MFinal")
                        .HasColumnType("int")
                        .HasColumnName("m_final");

                    b.Property<int?>("MInicial")
                        .HasColumnType("int")
                        .HasColumnName("m_inicial");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("NombreDia")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("nombre_dia");

                    b.ToTable((string)null);

                    b.ToView("View_PorAutorizarConHorariosTurnos", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewPreliFinalDoce2024", b =>
                {
                    b.Property<int?>("Cant")
                        .HasColumnType("int")
                        .HasColumnName("cant");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.ToTable((string)null);

                    b.ToView("View_PreliFinalDoce2024", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewSinPostgrado", b =>
                {
                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.Property<string>("Postgrado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("View_SinPostgrado", (string)null);
                });

            modelBuilder.Entity("UdelasCore.Negocio.Modelos.HorariosDocencia.ViewUlt3AnioV2", b =>
                {
                    b.Property<string>("Apellido")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("apellido");

                    b.Property<string>("CedProfesor")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("ced_profesor");

                    b.Property<int?>("CodExtension")
                        .HasColumnType("int")
                        .HasColumnName("cod_extension");

                    b.Property<int?>("Expr1")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("nombre");

                    b.ToTable((string)null);

                    b.ToView("View_Ult3Anio-V2", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
